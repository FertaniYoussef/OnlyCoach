<!doctype html>
<html class="h-full bg-black">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    {% block stylesheets %}
        {{ encore_entry_link_tags('app') }}
    {% endblock %}
    <title>{{course.titre}}</title>
</head>
<body class="h-full">
<div id="overlay" class="bg-gradient-to-br from-black to-gray-900 w-full h-full fixed z-10 transition-[height] duration-1000 flex items-center justify-center">
<div class="h-1 absolute left-0 top-0 transition-[width/height]" id="progress"></div>
<div class="flex flex-col items-center justify-center space-y-3 visible transition-all duration-500 z-10" id="overlayinner">
<h1 class="text-3xl text-white block" id="loading">
  üë®‚Äçüíª
</h1>
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-7 h-7 text-emerald-400 animate-none hidden" id="done">

  <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
</svg>

<h1 class="text-white text-base" id="counter"></h1>
<button id="opencourse"class="px-4 py-2 rounded-full bg-slate-200  text-xs hover:bg-slate-300 animate-pulse hover:animate-none duration-500 hidden">Proceed to course &uarr;</button>


<div class="absolute bottom-24 lg:flex flex-col space-y-3 items-center w-full  hidden">
<h1 class="text-white text-sm">Here is a playlist for your contribution to our community! ‚ú®</h1>

<iframe style="border-radius:12px" src="https://open.spotify.com/embed/playlist/37i9dQZF1DZ06evO2PKuJy?utm_source=generator&theme=0" width="100%" height="352" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy" class="max-w-lg max-h-36" id="spotify"></iframe>
</div>
</div>

</div>
<div class="min-h-full">
    <!-- Off-canvas menu for mobile, show/hide based on off-canvas menu state. -->
    <div class="relative z-40 hidden lg:hidden" role="dialog" aria-modal="true" id="mobileMenu">
        <!--
          Off-canvas menu backdrop, show/hide based on off-canvas menu state.

          Entering: "transition-opacity ease-linear duration-300"
            From: "opacity-0"
            To: "opacity-100"
          Leaving: "transition-opacity ease-linear duration-300"
            From: "opacity-100"
            To: "opacity-0"
        -->
        <div class="fixed inset-0 bg-gray-600 bg-opacity-75"></div>

        <div class="fixed inset-0 z-40 flex">
            <!--
              Off-canvas menu, show/hide based on off-canvas menu state.

              Entering: "transition ease-in-out duration-300 transform"
                From: "-translate-x-full"
                To: "translate-x-0"
              Leaving: "transition ease-in-out duration-300 transform"
                From: "translate-x-0"
                To: "-translate-x-full"
            -->
            <div class="relative flex w-full max-w-xs flex-1 flex-col bg-black pt-5 pb-4">
                <!--
                  Close button, show/hide based on off-canvas menu state.

                  Entering: "ease-in-out duration-300"
                    From: "opacity-0"
                    To: "opacity-100"
                  Leaving: "ease-in-out duration-300"
                    From: "opacity-100"
                    To: "opacity-0"
                -->
                <div class="absolute top-0 right-0 -mr-12 pt-2">
                    <button type="button" id="closeMenu"
                            class="ml-1 flex h-10 w-10 items-center justify-center rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white">
                        <span class="sr-only">Close sidebar</span>
                        <!-- Heroicon name: outline/x-mark -->
                        <svg class="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none"
                             viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
                        </svg>
                    </button>
                </div>

                <div class="flex flex-shrink-0 items-center px-4">
                    <img class="h-8 w-auto" src="https://tailwindui.com/img/logos/mark.svg?color=cyan&shade=300"
                         alt="Easywire logo">
                </div>
                <nav class="mt-5 h-full flex-shrink-0 divide-y divide-cyan-800 overflow-y-auto" aria-label="Sidebar">
                    <div class="space-y-1 px-2">
                        <!-- Current: "bg-cyan-800 text-white", Default: "text-cyan-100 hover:text-white hover:bg-cyan-600" -->
                        <a href="{{ path('app_dashboard') }}"
                           class="text-cyan-100 hover:text-white hover:bg-cyan-600 group flex items-center px-2 py-2 text-base font-medium rounded-md"
                           aria-current="page">
                            <!-- Heroicon name: outline/home -->
                            <svg class="mr-4 h-6 w-6 flex-shrink-0 text-cyan-200" xmlns="http://www.w3.org/2000/svg"
                                 fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                                 aria-hidden="true">
                                <path stroke-linecap="round" stroke-linejoin="round"
                                      d="M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25"/>
                            </svg>
                            Home
                        </a>


                        <a href="{{ path('app_dashboard_listCourses') }}"
                       class="bg-cyan-800 text-white hover:bg-cyan-600 group flex items-center px-2 py-2 text-sm leading-6 font-medium rounded-md">
                        <!-- Heroicon name: outline/credit-card -->
                        <svg class="mr-4 h-6 w-6 flex-shrink-0 text-cyan-200" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M14.25 9.75L16.5 12l-2.25 2.25m-4.5 0L7.5 12l2.25-2.25M6 20.25h12A2.25 2.25 0 0020.25 18V6A2.25 2.25 0 0018 3.75H6A2.25 2.25 0 003.75 6v12A2.25 2.25 0 006 20.25z" />
                        </svg>

                        Courses
                    </a>



                    </div>
                </nav>
            </div>

            <div class="w-14 flex-shrink-0" aria-hidden="true">
                <!-- Dummy element to force sidebar to shrink to fit close icon -->
            </div>
        </div>
    </div>

    <!-- Static sidebar for desktop -->
    <div class="hidden lg:fixed lg:inset-y-0 lg:flex lg:w-64 lg:flex-col">
        <!-- Sidebar component, swap this element with another sidebar if you like -->
        <div class="flex flex-grow flex-col overflow-y-auto bg-black pt-5 pb-4">
            <div class="flex flex-shrink-0 items-center px-4">
                <img class="h-8 w-auto" src="https://tailwindui.com/img/logos/mark.svg?color=cyan&shade=300"
                     alt="Easywire logo">
            </div>
            <nav class="mt-5 flex flex-1 flex-col  overflow-y-auto" aria-label="Sidebar" id="nav">
                <div class="space-y-1 px-2">
                    <!-- Current: "bg-cyan-800 text-white", Default: "text-cyan-100 hover:text-white hover:bg-cyan-600" -->
                    <a href="{{path('app_dashboard')}}"
                       class="text-cyan-100 hover:text-white hover:bg-cyan-600 group flex items-center px-2 py-2 text-sm leading-6 font-medium rounded-md"
                       aria-current="page">
                        <!-- Heroicon name: outline/home -->
                        <svg class="mr-4 h-6 w-6 flex-shrink-0 text-cyan-200" xmlns="http://www.w3.org/2000/svg"
                             fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"
                             aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                  d="M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25"/>
                        </svg>
                        Home
                    </a>


                    <a href="{{ path('app_dashboard_listCourses') }}"
                       class="bg-cyan-800 text-white hover:bg-cyan-600 group flex items-center px-2 py-2 text-sm leading-6 font-medium rounded-md">
                        <!-- Heroicon name: outline/credit-card -->
                        <svg class="mr-4 h-6 w-6 flex-shrink-0 text-cyan-200" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M14.25 9.75L16.5 12l-2.25 2.25m-4.5 0L7.5 12l2.25-2.25M6 20.25h12A2.25 2.25 0 0020.25 18V6A2.25 2.25 0 0018 3.75H6A2.25 2.25 0 003.75 6v12A2.25 2.25 0 006 20.25z" />
                        </svg>

                        Courses
                    </a>

                </div>
                <div id="player"></div>
            </nav>
        </div>
    </div>

    <div class="flex flex-1 flex-col lg:pl-64">
        <div class="flex h-16 flex-shrink-0 border-b border-white bg-black lg:border-none">
            <button type="button" id="openMenuMobile"
                    class="border-r border-gray-200 px-4 text-gray-400 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-cyan-500 lg:hidden">
                <span class="sr-only">Open sidebar</span>
                <!-- Heroicon name: outline/bars-3-center-left -->
                <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                     stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round"
                          d="M3.75 6.75h16.5M3.75 12H12m-8.25 5.25h16.5"/>
                </svg>
            </button>
            <!-- Search bar -->
            <div class="flex flex-1 justify-between px-4 sm:px-6 lg:mx-auto lg:max-w-6xl lg:px-8">
                <div class="flex flex-1">
                </div>
            </div>
        </div>
        <main class="flex-1">
            <!-- Page header -->
            <div class="bg-black shadow">
                <div class="px-4 sm:px-6 lg:mx-auto lg:max-w-6xl lg:px-8">
                    <div class="py-6 md:flex md:items-center md:justify-between  lg:border-black">
                        <div class="min-w-0 flex-1">
                            <!-- Profile -->
                            <div class="flex items-center">
                                <img class="hidden h-16 w-16 rounded-full sm:block"
                                   src="{{asset(userinfo.getpicture())}}"
                                     alt="">
                                <div>
                                    <div class="flex items-center">
                                        <img class="h-16 w-16 rounded-full sm:hidden"
                                             src="https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2.6&w=256&h=256&q=80"
                                             alt="">
                                        <h1 class="ml-3 text-2xl font-bold leading-7 text-white sm:truncate sm:leading-9">
                                           Welcome, {{userinfo.nom}} {{userinfo.prenom}}</h1>
                                    </div>
                                    <dl class="mt-6 flex flex-col sm:ml-3 sm:mt-1 sm:flex-row sm:flex-wrap">
                                        <dt class="sr-only">Company</dt>
                                        <dd class="flex items-center text-sm font-medium capitalize text-gray-500 sm:mr-6">
                                            <!-- Heroicon name: mini/building-office -->
                                            <svg class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400"
                                                 xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"
                                                 fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd"
                                                      d="M4 16.5v-13h-.25a.75.75 0 010-1.5h12.5a.75.75 0 010 1.5H16v13h.25a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75v-2.5a.75.75 0 00-.75-.75h-2.5a.75.75 0 00-.75.75v2.5a.75.75 0 01-.75.75h-3.5a.75.75 0 010-1.5H4zm3-11a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zM7.5 9a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1zM11 5.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zm.5 3.5a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1z"
                                                      clip-rule="evenodd"/>
                                            </svg>
                                            {{userinfo.getCoach().getCategorie()}}
                                        </dd>
                                        <dt class="sr-only">Account status</dt>
                                        <dd class="mt-3 flex items-center text-sm font-medium capitalize text-gray-500 sm:mr-6 sm:mt-0">
                                            <!-- Heroicon name: mini/check-circle -->
                                            <svg class="mr-1.5 h-5 w-5 flex-shrink-0 text-green-400"
                                                 xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"
                                                 fill="currentColor" aria-hidden="true">
                                                <path fill-rule="evenodd"
                                                      d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"
                                                      clip-rule="evenodd"/>
                                            </svg>
                                            Verified coach
                                        </dd>
                                    </dl>
                                </div>
                            </div>
                        </div>
                        <div class="mt-6 flex space-x-3 md:mt-0 md:ml-4">
                        </div>
                    </div>
                </div>
            </div>


            <div id="course" class="bg-cover h-80 flex flex-col justify-end px-4 py-10 shadow-lg" style="background-image: url('/images/{{ course.coursphoto }}')">
            <div id="course-data-container">
            <div class="flex justify-between items-center">
            <div>
            <div id="status" class="flex space-x-2 items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="lightgreen" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 text-emerald-500 ">
            <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12c0 1.268-.63 2.39-1.593 3.068a3.745 3.745 0 01-1.043 3.296 3.745 3.745 0 01-3.296 1.043A3.745 3.745 0 0112 21c-1.268 0-2.39-.63-3.068-1.593a3.746 3.746 0 01-3.296-1.043 3.745 3.745 0 01-1.043-3.296A3.745 3.745 0 013 12c0-1.268.63-2.39 1.593-3.068a3.745 3.745 0 011.043-3.296 3.746 3.746 0 013.296-1.043A3.746 3.746 0 0112 3c1.268 0 2.39.63 3.068 1.593a3.746 3.746 0 013.296 1.043 3.746 3.746 0 011.043 3.296A3.745 3.745 0 0121 12z" />
            </svg>
            <span class="font-medium text-white text-sm">Published on {{ course.datecreation|date("d M Y") }}</span>
            </div>
                <h1 class="text-3xl font-bold leading-8 text-white">{{course.titre}}</h1>
                </div>
                <button id="showMembers" class="h-12 px-7 bg-black border-[1px] border-sky-700 rounded-full text-white text-sm hover:scale-105 transition-all duration-200">View members</button>
                </div>
            </div>
            </div>
            <div class="w-full bg-black" id="sections">
            </div>



        </main>
    </div>
</div>

<div id="modal" class="w-full h-full bg-black/75 backdrop-blur-sm fixed top-0  justify-center items-center  hidden">
    <div id="container" class="lg:w-1/2 w-5/6  max-h-96 bg-white rounded-md p-4">
        <div class="flex justify-between items-center border-b-[1px] border-gray-200 -mx-4 px-4 pb-2">
            <h1 class="text-xl font-bold">Followed by</h1>
            <button id="closeModal" class="h-6 w-6 bg-gray-200 rounded-full hover:scale-105 transition-all duration-200 flex justify-center items-center">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
            </svg>
</button>
        </div>
        <div id="members" class="mt-2 -mx-4 max-h-72 overflow-y-scroll">
        <!-- Create a table -->
        <table class="table w-full">
            <thead class="sticky top-0 left-0 bg-white">
                <tr>
                    <th class="px-4 py-2 text-left text-black text-sm">Fullname</th>
                    <th class="px-4 py-2 text-right text-black text-sm">Joined</th>
                </tr>
            </thead>
            <tbody>
               {# {% for member in [1..9] %} #}
               {% for i in range(0, 9) %}
                <tr>
                    <td class=" px-4 py-2 text-left text-sm">Amrou Ghribi</td>
                    <td class=" px-4 py-2 text-right text-sm">8/3/2023</td>
                </tr>
                {% endfor %}
            </tbody>
        </div>

    
    </div>
</div>





<script>

    const closeMenuButton = document.getElementById('closeMenu')
    closeMenuButton.addEventListener('click', () => {
        document.getElementById('mobileMenu').classList.add('hidden')
    })

    const openMenuButton = document.getElementById('openMenuMobile')
    openMenuButton.addEventListener('click', () => {
        document.getElementById('mobileMenu').classList.remove('hidden')
    })


               async function getData() {
                const response = await fetch('/coach/dashboard/api/course/'+{{course.id}}, {
             method: 'POST',
                headers: {
                 'Content-Type': 'application/json',
                'Accept': 'application/json'
             },
            })
             .then(res => res.json())
             .catch(err => console.log(err))

             return response


            }

            // call the function then group sections and resources by section id
           const data = getData().then(data => {
                // extract section and group it with its resources by section id
                const sections = data.sections.map(section => {
                    const resources = data.resources.filter(resource => resource.id === section.id)
                    return { ...section, resources }
                })
                // append sections to the dom
                const sectionContainer = document.getElementById('sections')


                /* WIP */
                var n = 1
                sections.forEach(section => {
                    var link = /[^/]*$/.exec(section.resources[0].link)[0];
                    link = link.replace("watch?v=", "");
                    const div = document.createElement('div');
                    const sectionId = `section${section.id}`;
                    div.id = sectionId;
                    div.innerHTML = `<div id="${sectionId}" class="pb-8">
                    <div class="bg-black w-full py-4 shadow-md flex justify-between items-center px-4 border-b-[1px] border-indigo-900">
                    <h1 class="text-lg text-white font-medium">Section ${n} : ${section.title}</h1>
                    <span class="text-sm text-sky-200">${n}/${sections.length}</span></div>
                    <iframe class="w-full h-[35rem]" src="https://www.youtube.com/embed/${link}" id="player" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

                    <h1 class="text-lg font-medium mt-4 ml-4 text-white">Description</h1>
                    <p class="text-sm  ml-4 text-white">${section.resources[0].description}</p>

                    </div>`


                    sectionContainer.appendChild(div)
                    n++
                })
    })

    var overlay = document.getElementById('overlay')
    var overlayinner = document.getElementById('overlayinner')
    var player = document.getElementById('player')
    const loading = document.getElementById('loading')
    var done = document.getElementById('done')

    // make a counter from 0 to 100
    let counter = 0
    const intervales = [40,70,65]
    // pick a random number from the array
    const random = intervales[Math.floor(Math.random() * intervales.length)]
    const skews = ['skew-y-12','-skew-y-12']
    const randomskew = skews[Math.floor(Math.random() * skews.length)]
    const interval = setInterval(() => {
        counter++
        const progress = document.getElementById('progress')
        progress.classList.add('bg-red-500')
        progress.style.width = counter+"%"
            progress.classList.add('duration-1000')

       if (counter < 30)
        document.getElementById('counter').innerHTML = "Fetching course data.. "+counter+"%"+" üëÄ"
        if (counter >= 30) {
             document.getElementById('counter').innerHTML = "Making sure everything looks amazing..."+counter+"%"+" üôâ"
        }
        if (counter >= 50) {
             document.getElementById('counter').innerHTML = "Adding some magic..."+counter+"%"+" ü™Ñ"
             progress.classList.add('bg-yellow-400')
            progress.classList.remove('bg-red-500')
        }
        if (counter >= 80) {
             document.getElementById('counter').innerHTML = "Almost there..."+counter+"%"+" üöÄ"
        }
        if (counter === 100) {
            clearInterval(interval)
            progress.classList.add('bg-lime-700')
            progress.classList.remove('bg-yellow-400')

            setTimeout(() => {
            progress.style.height = 90+"%"
            }, 1000)
            setTimeout(() => {
            progress.classList.add(randomskew)
            }, 2000)

            // create an interval to dynamically change the bg color of the progress bar
            const interval2 = setInterval(() => {
                const colors = ['bg-indigo-700','bg-pink-800','bg-lime-700']
                const random = colors[Math.floor(Math.random() * colors.length)]

                progress.classList.remove('bg-indigo-700')
                progress.classList.remove('bg-pink-800')
                progress.classList.remove('bg-lime-700')
                progress.classList.add(random)
                // do the same for opencourse button
                opencourse.classList.remove('text-indigo-700')
                opencourse.classList.remove('text-pink-800')
                opencourse.classList.remove('text-lime-700')
                opencourse.classList.add(random.replace('bg-', 'text-'))

               // progress.classList.add(random)
            }, 2300)


                setTimeout(() => {
                document.getElementById('counter').innerHTML = "Voila! üéâ"
                }, 300)
            loading.classList.add('hidden')
            loading.classList.remove('block')
            done.classList.add('block')
            done.classList.remove('hidden')

            const opencourse = document.getElementById('opencourse')
            var spotify = document.getElementById('spotify')
            setTimeout(() => {
            opencourse.classList.add('block')
            opencourse.classList.remove('hidden')
            }, 2200)


            opencourse.addEventListener('click', () => {
                opencourse.classList.remove('animate-pulse')
            progress.classList.remove(randomskew)
            progress.style.height = 100+"%"
            progress.classList.add('bg-lime-600')

                                setTimeout(() => {
                var audio = new Audio('/assets/success.mp3');
                audio.play();
                                }, 100)
               setTimeout(() => {
                // change spotify height
            spotify.classList.remove('max-h-36')
            spotify.classList.add('max-h-full')
            document.getElementById('nav').classList.add('justify-between')
            spotify.classList.add('mb-4')
            spotify.classList.add('px-2')
            player.appendChild(spotify)
            overlayinner.classList.add('invisible')
            overlayinner.classList.remove('visible')
            overlay.classList.add('h-0')
            overlay.classList.remove('h-full')
            setTimeout(() => {
            overlay.remove()
            }, 1000)
        }, 800)
            })

        // remove overlay from dom
        /* setTimeout(() => {
            overlayinner.classList.add('invisible')
            overlayinner.classList.remove('visible')
            overlay.classList.add('h-0')
            overlay.classlist.remove('h-full')
            overlay.remove()
        }, 2000) */
        }
    }, random)


    // add event listener to the showMembers button
    const showMembers = document.getElementById('showMembers')
    const modal = document.getElementById('modal')
    const close = document.getElementById('closeModal')
    showMembers.addEventListener('click', () => {
        modal.classList.add('flex')
        modal.classList.remove('hidden')
    })
    close.addEventListener('click', () => {
        modal.classList.add('hidden')
        modal.classList.remove('block')
    })





</script>

</body>
</html>
